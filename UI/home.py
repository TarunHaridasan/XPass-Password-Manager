from PyQt5 import QtCore, QtGui, QtWidgets
from .addRecord import Ui_Dialog
from . import icons_rc
import sys
from scripts import manager

class Ui_MainWindow(object):
	def setup(self, MainWindow, authkey, username, password):
		MainWindow.setObjectName("MainWindow")
		MainWindow.resize(1000, 600)
		MainWindow.setMinimumSize(QtCore.QSize(1000, 600))
		MainWindow.setMaximumSize(QtCore.QSize(1000, 600))
		MainWindow.setStyleSheet("color: rgb(255, 255, 255);\n"
	"border: none;\n"
	"font-family: Bahnschrift Condensed;")
		self.centralwidget = QtWidgets.QWidget(MainWindow)
		self.centralwidget.setObjectName("centralwidget")
		self.Side = QtWidgets.QFrame(self.centralwidget)
		self.Side.setGeometry(QtCore.QRect(0, 70, 221, 531))
		self.Side.setStyleSheet("\n"
	"background-color: rgb(32, 32, 32);")
		self.Side.setFrameShape(QtWidgets.QFrame.StyledPanel)
		self.Side.setFrameShadow(QtWidgets.QFrame.Raised)
		self.Side.setObjectName("Side")
		self.verticalLayoutWidget = QtWidgets.QWidget(self.Side)
		self.verticalLayoutWidget.setGeometry(QtCore.QRect(16, 34, 203, 431))
		self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
		self.SideBar = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
		self.SideBar.setContentsMargins(0, 0, 0, 0)
		self.SideBar.setObjectName("SideBar")
		self.Add = QtWidgets.QPushButton(self.verticalLayoutWidget)
		font = QtGui.QFont()
		font.setFamily("Bahnschrift Condensed")
		font.setPointSize(20)
		self.Add.setFont(font)
		icon = QtGui.QIcon()
		icon.addPixmap(QtGui.QPixmap(":/icons/feather/plus-circle.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
		self.Add.setIcon(icon)
		self.Add.setIconSize(QtCore.QSize(35, 35))
		self.Add.setObjectName("Add")
		self.SideBar.addWidget(self.Add)
		self.Remove = QtWidgets.QPushButton(self.verticalLayoutWidget)
		font = QtGui.QFont()
		font.setFamily("Bahnschrift Condensed")
		font.setPointSize(20)
		self.Remove.setFont(font)
		icon1 = QtGui.QIcon()
		icon1.addPixmap(QtGui.QPixmap(":/icons/feather/delete.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
		self.Remove.setIcon(icon1)
		self.Remove.setIconSize(QtCore.QSize(35, 35))
		self.Remove.setObjectName("Remove")
		self.SideBar.addWidget(self.Remove)
		self.Change = QtWidgets.QPushButton(self.verticalLayoutWidget)
		font = QtGui.QFont()
		font.setFamily("Bahnschrift Condensed")
		font.setPointSize(20)
		self.Change.setFont(font)
		icon2 = QtGui.QIcon()
		icon2.addPixmap(QtGui.QPixmap(":/icons/feather/refresh-cw.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
		self.Change.setIcon(icon2)
		self.Change.setIconSize(QtCore.QSize(35, 35))
		self.Change.setObjectName("Change")
		self.SideBar.addWidget(self.Change)
		self.Main = QtWidgets.QFrame(self.centralwidget)
		self.Main.setGeometry(QtCore.QRect(220, 70, 781, 531))
		self.Main.setStyleSheet("#Main {\n"
	"background-color: qlineargradient(spread:pad, x1:0, y1:0.824045, x2:0.227, y2:0.83, stop:0.0924574 rgba(32, 32, 32, 255), stop:0.751825 rgba(44, 44, 44, 255));\n"
	"}")
		self.Main.setFrameShape(QtWidgets.QFrame.StyledPanel)
		self.Main.setFrameShadow(QtWidgets.QFrame.Raised)
		self.Main.setObjectName("Main")
		self.Version = QtWidgets.QLabel(self.Main)
		self.Version.setGeometry(QtCore.QRect(695, 506, 81, 20))
		font = QtGui.QFont()
		font.setFamily("Bahnschrift Condensed")
		font.setPointSize(12)
		font.setBold(False)
		font.setUnderline(False)
		font.setWeight(50)
		font.setKerning(False)
		self.Version.setFont(font)
		self.Version.setLayoutDirection(QtCore.Qt.LeftToRight)
		self.Version.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
		self.Version.setObjectName("Version")
		self.listWidget = QtWidgets.QListWidget(self.Main)
		self.listWidget.setGeometry(QtCore.QRect(80, 30, 641, 441))
		font = QtGui.QFont()
		font.setFamily("Bahnschrift Condensed")
		font.setPointSize(20)
		self.listWidget.setFont(font)
		self.listWidget.setStyleSheet("background-color: rgb(40, 40, 40);\n"
	"border: solid;\n"
	"border-width: 1px;\n"
	"border-color: white;")
		self.listWidget.setLineWidth(1)
		self.listWidget.setDragEnabled(False)
		self.listWidget.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectItems)
		self.listWidget.setGridSize(QtCore.QSize(0, 50))
		self.listWidget.setObjectName("listWidget")
		self.Titlebar = QtWidgets.QFrame(self.centralwidget)
		self.Titlebar.setGeometry(QtCore.QRect(0, -1, 1001, 71))
		self.Titlebar.setStyleSheet("background-color: rgb(31, 31, 31);")
		self.Titlebar.setFrameShape(QtWidgets.QFrame.StyledPanel)
		self.Titlebar.setFrameShadow(QtWidgets.QFrame.Raised)
		self.Titlebar.setObjectName("Titlebar")
		self.horizontalLayoutWidget = QtWidgets.QWidget(self.Titlebar)
		self.horizontalLayoutWidget.setGeometry(QtCore.QRect(10, -4, 211, 79))
		self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
		self.Title = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
		self.Title.setContentsMargins(0, 0, 0, 0)
		self.Title.setSpacing(11)
		self.Title.setObjectName("Title")
		self.Logo = QtWidgets.QPushButton(self.horizontalLayoutWidget)
		self.Logo.setText("")
		icon3 = QtGui.QIcon()
		icon3.addPixmap(QtGui.QPixmap(":/icons/feather/shield.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
		self.Logo.setIcon(icon3)
		self.Logo.setIconSize(QtCore.QSize(60, 60))
		self.Logo.setObjectName("Logo")
		self.Title.addWidget(self.Logo)
		self.Name = QtWidgets.QLabel(self.horizontalLayoutWidget)
		font = QtGui.QFont()
		font.setFamily("Bahnschrift Condensed")
		font.setPointSize(47)
		font.setBold(False)
		font.setWeight(50)
		self.Name.setFont(font)
		self.Name.setObjectName("Name")
		self.Title.addWidget(self.Name)
		self.pushButton = QtWidgets.QPushButton(self.Titlebar)
		self.pushButton.setGeometry(QtCore.QRect(850, 10, 141, 51))
		font = QtGui.QFont()
		font.setFamily("Bahnschrift Condensed")
		font.setPointSize(15)
		self.pushButton.setFont(font)
		icon4 = QtGui.QIcon()
		icon4.addPixmap(QtGui.QPixmap(":/icons/feather/log-out.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
		self.pushButton.setIcon(icon4)
		self.pushButton.setIconSize(QtCore.QSize(35, 35))
		self.pushButton.setObjectName("pushButton")
		MainWindow.setCentralWidget(self.centralwidget)
		self.retranslateUi(MainWindow)
		QtCore.QMetaObject.connectSlotsByName(MainWindow)
		#Additions
		self.vault = manager.Vault(authkey, username, password)
		self.Remove.clicked.connect(self.removeRecord)
		self.Add.clicked.connect(self.addRecord)
		self.pushButton.clicked.connect(self.save)
		self.Change.clicked.connect(self.changeRecord)

	def retranslateUi(self, MainWindow):
		_translate = QtCore.QCoreApplication.translate
		MainWindow.setWindowTitle(_translate("MainWindow", "XPass"))
		self.Add.setText(_translate("MainWindow", "  Add Record"))
		self.Remove.setText(_translate("MainWindow", "  Remove Record"))
		self.Change.setText(_translate("MainWindow", "   Change Record"))
		self.Version.setText(_translate("MainWindow", "Version: 1.0.0"))
		self.Name.setText(_translate("MainWindow", "XPass"))
		self.pushButton.setText(_translate("MainWindow", "Save and Quit"))

	#Refresh the passwords list on screen
	def refreshList(self):
		self.listWidget.clear()
		for key in self.vault.records:
			self.listWidget.addItem(key)

	#Remove a record
	def removeRecord(self):
		item = self.listWidget.currentItem()
		if item:
			name = item.text()
			self.vault.remove(name)
			self.refreshList()

	#Add a record (Open the dialog box)
	def addRecord(self):
		dialog = QtWidgets.QDialog()
		ui = Ui_Dialog()
		ui.setupUi(dialog)
		if dialog.exec():
			name = ui.name.text()
			url = ui.url.text()
			username = ui.username.text()
			password = ui.password.text()
			self.vault.add(name, url, username, password)
			self.refreshList()

	#Change record
	def changeRecord(self):
		curItem = self.listWidget.currentItem()
		if curItem == None:
			return
		data = self.vault.get(curItem.text())
		dialog = QtWidgets.QDialog()
		ui = Ui_Dialog()
		ui.setupUi(dialog)
		ui.load(curItem.text(), data)
		if dialog.exec():
			name = ui.name.text()
			url = ui.url.text()
			username = ui.username.text()
			password = ui.password.text()
			self.vault.remove(curItem.text())
			self.vault.add(name, url, username, password)
			self.refreshList()
	
	#Save and close
	def save(self):
		self.vault.encryptVault()
		sys.exit()

if __name__ == "__main__":
	app = QtWidgets.QApplication(sys.argv)
	MainWindow = QtWidgets.QMainWindow()
	ui = Ui_MainWindow()
	ui.setup(MainWindow, key, username, password)
	MainWindow.show()
	ui.refreshList()
	sys.exit(app.exec_())